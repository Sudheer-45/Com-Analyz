# ---------------------------------------------------------------
# Main Project Root Level Ignores
# These apply to the root and any subdirectories unless overridden
# ---------------------------------------------------------------

# Environment variables
.env
.env.*.local
.flaskenv

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Editor directories and files
.vscode/ # VS Code specific settings
!.vscode/extensions.json # Keep extensions.json if you want to recommend extensions
.idea/ # IntelliJ IDEA
.DS_Store # macOS
Thumbs.db # Windows
ehthumbs.db # Windows
Desktop.ini # Windows
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Common OS generated files
.Trash/
.Spotlight-V100/
.TemporaryItems/
.fseventsd/

# ---------------------------------------------------------------
# Node.js Backend Specific (e.g., if 'node_backend' is a directory)
# ---------------------------------------------------------------
# Assuming your node backend is in a folder like `node_backend/`
# If node_modules is at the root, keep it at the top level ignore.
# If it's inside node_backend/, this still works.
node_modules/
dist/ # Common build output for Node.js projects (e.g., if transpiled)
tmp/
*.tsbuildinfo # TypeScript build info

# ---------------------------------------------------------------
# Python Flask Backend Specific (e.g., if 'python_backend' is a directory)
# ---------------------------------------------------------------
# Virtual environment
venv/
.venv/ # Common alternative name for virtual env

# Byte-code and compiled files
__pycache__/
*.pyc
*.pyo
*.pyd

# Distribution / build
build/
develop-eggs/
dist/
eggs/
.eggs/
*.egg-info/
.installed.cfg
*.egg

# Testing and linting
.pytest_cache/
.coverage
.tox/
.mypy_cache/

# Jupyter Notebook specific (if used)
.ipynb_checkpoints/

# ---------------------------------------------------------------
# React Frontend Specific (e.g., if 'react_frontend' is a directory)
# ---------------------------------------------------------------
# Assuming your react frontend is in a folder like `react_frontend/`
# If node_modules is at the root, keep it at the top level ignore.
# If it's inside react_frontend/, this still works.
build/ # Create React App build output
dist/ # Vite build output (if you used Vite)
.parcel-cache/ # Parcel bundler cache
.yarn/ # Yarn 2+ cache
.cache/ # General cache directories

# React specific logs
*.log
# If you have a .env.local in your React app, it's covered by the top-level .env.*.local
